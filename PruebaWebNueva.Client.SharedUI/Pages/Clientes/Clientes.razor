@page "/clientes"
@using PruebaWebNueva.Application.Services
@using PruebaWebNueva.Application.DTOs
@inject IClienteService ClienteService
@inject IAuthService AuthService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<ProtectedPageBase>
    <div class="container-fluid">
        <div class="row">
            <div class="col-12">
                <div class="card shadow-sm">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h3 class="mb-0">
                            <i class="fas fa-users me-2"></i>
                            <span class="d-none d-sm-inline">Listado de Clientes</span>
                            <span class="d-sm-none">Clientes</span>
                        </h3>
                        <button class="btn btn-success btn-lg" @onclick="NuevoCliente">
                            <i class="fas fa-plus me-1"></i>
                            <span class="d-none d-sm-inline">Nuevo Cliente</span>
                            <span class="d-sm-none">Nuevo</span>
                        </button>
                    </div>
                    <div class="card-body">
                        @if (clientes == null)
                        {
                            <div class="text-center p-4">
                                <div class="spinner-border text-primary" role="status">
                                    <span class="visually-hidden">Cargando...</span>
                                </div>
                                <p class="mt-2">Cargando clientes...</p>
                            </div>
                        }
                        else if (!clientes.Any())
                        {
                            <div class="text-center p-4">
                                <i class="fas fa-inbox fa-3x text-muted mb-3"></i>
                                <p class="text-muted">No hay clientes disponibles.</p>
                            </div>
                        }
                        else
                        {
                            <div class="table-responsive">
                                <table class="table table-striped table-hover">
                                    <thead class="table-dark">
                                        <tr>
                                            <th>Razón Social</th>
                                            <th>CUIT/CUIL</th>
                                            <th>Email</th>
                                            <th>Teléfono</th>
                                            <th>Activo</th>
                                            <th class="text-center">Acciones</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var c in clientes)
                                        {
                                            <tr>
                                                <td class="align-middle fw-bold">@c.RazonSocial</td>
                                                <td class="align-middle">@c.CuitCuil</td>
                                                <td class="align-middle">@c.Email</td>
                                                <td class="align-middle">@c.Telefono</td>
                                                <td class="align-middle">
                                                    <span class="badge @(c.Activo ? "bg-success" : "bg-danger")">
                                                        @(c.Activo ? "Activo" : "Inactivo")
                                                    </span>
                                                </td>
                                                <td class="text-center align-middle">
                                                    <div class="btn-group" role="group">
                                                        <button class="btn btn-outline-primary btn-sm"
                                                                @onclick="() => EditarCliente(c.Id)"
                                                                title="Editar cliente">
                                                            <i class="fas fa-edit"></i>
                                                            <span class="d-none d-xl-inline ms-1">Editar</span>
                                                        </button>
                                                        <button class="btn btn-outline-danger btn-sm"
                                                                @onclick="() => EliminarCliente(c.Id)"
                                                                title="Eliminar cliente">
                                                            <i class="fas fa-trash"></i>
                                                            <span class="d-none d-xl-inline ms-1">Eliminar</span>
                                                        </button>
                                                    </div>
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</ProtectedPageBase>

@code {
    private List<Cliente>? clientes;
    private Usuario? usuarioActual;

    protected override async Task OnInitializedAsync()
    {
        usuarioActual = await AuthService.GetUsuarioActualAsync();
        await CargarClientes();
    }

    private async Task CargarClientes()
    {
        clientes = await ClienteService.GetAllAsync();
    }

    private void NuevoCliente()
    {
        NavigationManager.NavigateTo("/clientes/crear");
    }

    private void EditarCliente(int id)
    {
        NavigationManager.NavigateTo($"/clientes/editar/{id}");
    }

    private async Task EliminarCliente(int id)
    {
        bool confirmado = await JSRuntime.InvokeAsync<bool>("confirm", "¿Estás seguro de eliminar este cliente?");
        if (confirmado)
        {
            await ClienteService.DeleteAsync(id);
            await CargarClientes();
            await JSRuntime.InvokeVoidAsync("alert", "Cliente eliminado exitosamente");
        }
    }
}
